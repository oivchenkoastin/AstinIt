@using AstinIt.Areas
@model ProjectCost

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Admin/_Layout.cshtml";
}

<h2>@Html.DisplayFor(model => model.Name) </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ProjectId)


        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-12">
                @Html.CheckBoxFor(model => model.Active, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Active, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.Value, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Value, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrencyId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-12">
                @{
                    IEnumerable<Currency> dropDownModel = new List<Currency>();
                    this.UsingDb(db => { dropDownModel = db.Currency.ToList(); });
                    @Html.DropDownListFor(model => model.CurrencyId, dropDownModel.ConvertToListItems(null))                   
                    
                }
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}