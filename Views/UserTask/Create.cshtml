@using System.Collections
@using AstinIt.Areas
@model UserTask

@{
    ViewBag.Title = "New UserTask";
    //Layout = "~/Views/Admin/_Layout.cshtml";
}


    <div class="container">
        <h1>New UserTask</h1>
        <h2>@Html.DisplayFor(model => model.Name) </h2>

        @{
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                @Html.Hidden("Id", Guid.NewGuid().ToString())
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                    <div class="col-md-12">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.UserTaskStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @{
                            IEnumerable<UserTaskStatus> UserTaskStatusdropDownModel = Enum.GetValues(typeof(UserTaskStatus)).Cast<UserTaskStatus>().ToList();
                            @Html.DropDownListFor(model => model.UserTaskStatus, UserTaskStatusdropDownModel.Select(obj => new SelectListItem { Text = obj.ToString(), Value = ((int)obj).ToString()}))

                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @{
                            IEnumerable<UserDto> dropDownModelCustomer = new List<UserDto>();
                            this.UsingDb(db => { dropDownModelCustomer = db.Users.ToUserDtoList().ToList(); });
                            @Html.DropDownListFor(model => model.CustomerId, dropDownModelCustomer.ConvertToListItems(null))

                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @{
                            @Html.DropDownListFor(model => model.EmployeeId, dropDownModelCustomer.ConvertToListItems(null))
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" class="btn btn-primary" value="Add" />
                    </div>
                </div>
            }

        }


    </div>
