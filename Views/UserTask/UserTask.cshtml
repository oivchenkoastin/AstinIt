@using AstinIt.Areas
@using System.Linq
@model UserTask

@{
    ViewBag.Title = Model.Name;
    //Layout = "~/Views/Admin/_Layout.cshtml";

}

<div class="container">
<h2>@Html.DisplayFor(model => model.Name) </h2>

<hr/>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)


    <div class="form-group">
        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" }) (0-10) digit
        <div class="col-md-12">
            @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @{
                IEnumerable<UserDto> dropDownModel = new List<UserDto>();
                this.UsingDb(db => { dropDownModel = db.Users.ToUserDtoList().ToList(); });
                @Html.DropDownListFor(model => model.CustomerId, dropDownModel.ConvertToListItems(null))

            }
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @{
                @Html.DropDownListFor(model => model.EmployeeId, dropDownModel.ConvertToListItems(null))
            }
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.UserTaskStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @{
                IEnumerable<UserTaskStatus> UserTaskStatusdropDownModel = Enum.GetValues(typeof(UserTaskStatus)).Cast<UserTaskStatus>().ToList();
                @Html.DropDownListFor(model => model.UserTaskStatus, UserTaskStatusdropDownModel.Select(obj => new SelectListItem { Text = obj.ToString(), Value = ((int)obj).ToString(), Selected = ((int)obj).Equals((int)Model.UserTaskStatus) }))

            }
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-12">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

</div>